@using NzbDrone.Web.Helpers
@model NzbDrone.Web.Models.NotificationSettingsModel

@{
    Layout = null;
}

<div class="notifier">
    <label class="labelClass">@Html.LabelFor(m => m.SmtpEnabled)
        <span class="small">@Html.DescriptionFor(m => m.SmtpEnabled)</span>
    </label>
    @Html.CheckBoxFor(m => m.SmtpEnabled, new { @class = "inputClass checkClass" })

    <label class="labelClass">@Html.LabelFor(m => m.SmtpNotifyOnGrab)
        <span class="small">@Html.DescriptionFor(m => m.SmtpNotifyOnGrab)</span>
    </label>
    @Html.CheckBoxFor(m => m.SmtpNotifyOnGrab, new { @class = "inputClass checkClass" })

    <label class="labelClass">@Html.LabelFor(m => m.SmtpNotifyOnDownload)
        <span class="small">@Html.DescriptionFor(m => m.SmtpNotifyOnDownload)</span>
    </label>
    @Html.CheckBoxFor(m => m.SmtpNotifyOnDownload, new { @class = "inputClass checkClass" })

    <label class="labelClass">@Html.LabelFor(m => m.SmtpServer)
        <span class="small">@Html.DescriptionFor(m => m.SmtpServer)</span>
        <span class="small">@Html.ValidationMessageFor(m => m.SmtpServer)</span>
    </label>
    @Html.TextBoxFor(m => m.SmtpServer, new { @class = "inputClass" })

    <label class="labelClass">@Html.LabelFor(m => m.SmtpPort)
        <span class="small">@Html.DescriptionFor(m => m.SmtpPort)</span>
        <span class="small">@Html.ValidationMessageFor(m => m.SmtpPort)</span>
    </label>
    @Html.TextBoxFor(m => m.SmtpPort, new { @class = "inputClass" })

    <label class="labelClass">@Html.LabelFor(m => m.SmtpUseSsl)
        <span class="small">@Html.DescriptionFor(m => m.SmtpUseSsl)</span>
    </label>
    @Html.CheckBoxFor(m => m.SmtpUseSsl, new { @class = "inputClass checkClass" })

    <label class="labelClass">@Html.LabelFor(m => m.SmtpUsername)
        <span class="small">@Html.DescriptionFor(m => m.SmtpUsername)</span>
    </label>
    @Html.TextBoxFor(m => m.SmtpUsername, new { @class = "inputClass" })

    <label class="labelClass">@Html.LabelFor(m => m.SmtpPassword)
        <span class="small">@Html.DescriptionFor(m => m.SmtpPassword)</span>
    </label>
    @Html.TextBoxFor(m => m.SmtpPassword, new { @class = "inputClass", type = "password" })

    <label class="labelClass">@Html.LabelFor(m => m.SmtpFromAddress)
        <span class="small">@Html.DescriptionFor(m => m.SmtpFromAddress)</span>
        <span class="small">@Html.ValidationMessageFor(m => m.SmtpFromAddress)</span>
    </label>
    @Html.TextBoxFor(m => m.SmtpFromAddress, new { @class = "inputClass" })

    <label class="labelClass">@Html.LabelFor(m => m.SmtpToAddresses)
        <span class="small">@Html.DescriptionFor(m => m.SmtpToAddresses)</span>
        <span class="small">@Html.ValidationMessageFor(m => m.SmtpToAddresses)</span>
    </label>
    @Html.TextBoxFor(m => m.SmtpToAddresses, new { @class = "inputClass" })

    <input type="button" onclick="testSmtpSettings();" value="Send Test email" id="smtpTest"/>
</div>